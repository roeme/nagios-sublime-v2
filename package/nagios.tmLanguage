<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>cfg</string>
	</array>
	<key>name</key>
	<string>Nagios</string>
	<key>patterns</key>
	<array>

		<dict>
			<key>comment</key>
			<string># comments</string>
			<key>match</key>
			<string>^[\s]*#.*</string>
			<key>name</key>
			<string>comment.line.number-sign.nagios</string>
		</dict>

		<dict>
			<key>include</key>
			<string>#variable</string>
		</dict>

		<dict>
			<key>begin</key>
			<string>^[\s]*(define)[\s]+([A-Za-z0-9_]+)[\s]*(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.nagios</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.type.nagios</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.nagios</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>constant.character.nagios</string>
				</dict>
			</dict>
			<key>name</key>
			<string>entity.name.section.nagios</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#separator</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.variable.nagios</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.variable.nagios</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^[\s]*use[\s]+([A-Za-z0-9_-]+)(,([A-Za-z0-9_-]+))*</string>
					<key>name</key>
					<string>keyword.other.nagios</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^[\s]*(register)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.nagios</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#0or1</string>
						</dict>
					</array>

					<key>end</key>
					<string>$</string>
				</dict>


				<dict>
					<key>begin</key>
					<string>^[\s]*(address)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.nagios</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#ipaddr</string>
						</dict>
					</array>

					<key>end</key>
					<string>$</string>
				</dict>

				<!--dict>
					<key>match</key>
					<string>^[\s]*register[\s]+(0|1)</string>
					<key>name</key>
					<string>constant.other.nagios</string>
				</dict-->
				<dict>
					<key>match</key>
					<string>^[\s]*[A-Za-z0-9_]+[\s]</string>
					<key>name</key>
					<string>keyword.other.nagios</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>In-line comments</string>
					<key>match</key>
					<string>;.*</string>
					<key>name</key>
					<string>comment.line.semi-colon.nagios</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.nagios</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.nagios</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#separator</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>separator</key>
		<dict>
			<key>comment</key>
			<string>check_command separators</string>
			<key>match</key>
			<string>!</string>
			<key>name</key>
			<string>constant.character.nagios</string>
		</dict>
		<key>variable</key>
		<dict>
			<key>comment</key>
			<string>Variables like $SERVICESTATE$, $USER1$ etc</string>
			<key>match</key>
			<string>\$([A-Za-z][A-Za-z0-9_]+)\$</string>
			<key>name</key>
			<string>variable.nagios</string>
		</dict>

		<key>0or1</key>
		<dict>
			<key>comment</key>
			<string>Values which may be only 1 or 0</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(0|1)\s*$</string>
					<key>name</key>
					<string>constant.value.nagios</string>
				</dict>
				<dict>
					<!-- matches until $ by design, to get a highly visible visual feedback -->
					<key>match</key>
					<string>.*[^01].*$</string>
					<key>name</key>
					<string>invalid.illegal.value.nagios</string>
				</dict>
			</array>
		</dict>


		<key>ipaddr</key>
		<dict>
			<key>comment</key>
			<string>An IPv4 or v6 addr.</string>
			<key>patterns</key>
			<array>
				<!-- ipv4 -->
				<dict>
					<key>match</key>
					<string>((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\s*$</string>
  					<key>name</key>
  					<string>keyword.other.nagios</string>
				</dict>

				<!-- ipv6 --> 
				<dict>
					<key>match</key>
					<string>((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$</string>
  					<key>name</key>
  					<string>keyword.other.nagios</string>
				</dict>

				<!-- anything else will match here, and thus marked illegal. -->
				<dict>
					<key>match</key>
					<string>.*</string>
  					<key>name</key>
  					<string>invalid.illegal.value.nagios</string>
				</dict>

			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.nagios</string>
	<key>uuid</key>
	<string>3BFEB2AE-B359-41BD-8446-A22FD342329E</string>
</dict>
</plist>
